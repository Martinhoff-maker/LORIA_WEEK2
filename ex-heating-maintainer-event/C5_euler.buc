<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.contextFile org.eventb.core.comment="Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;   Notes: Context for coping with error in forward-euler " org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1604497888695" org.eventb.texttools.text_representation="context C5_euler&#10;/* Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;   Notes: Context for coping with error in forward-euler */&#10; extends C4_control_logic&#10;&#10;constants Tdon // difference equation when heating is on, using forward euler&#10;          Tdoff // difference equation when heating is off, using forward euler&#10;          err_on // error function compute error between Tdon and Ton&#10;          err_off // error function compute error between Tdoff and Toff&#10;&#10;&#10;axioms&#10;  @type_Tdon Tdon ∈ (R × Rplus × Rplus) → R // Tn * now * deltaT -&gt; Tn+1&#10;  @type_Tdoff Tdoff ∈ (R × Rplus × Rplus) → R // Tn * now * deltaT -&gt; Tn+1&#10;  @type_err_on err_on ∈ (Rplus × Rplus) → R // now * now+deltaT -&gt; error&#10;  @type_err_off err_off ∈ (Rplus × Rplus) → R // now * now+deltaT -&gt; error&#10;  @instance_Tdon Tdon = (λ (v ↦ t↦ dt) · v ↦ t↦ dt ∈ R × Rplus × Rplus ∣  v plus dt ) // def. of forward euler on the heating dynamics T_dot = 1&#10;  @instance_Tdoff Tdoff =  (λ (v ↦ t↦ dt) · v ↦ t↦ dt ∈ R × Rplus × Rplus ∣  v plus neg(dt) ) // def. of forward euler on the heating dynamics T_dot = -1&#10;  @instance_erron err_on = (λ (t1 ↦ t2) · t1 ↦ t2 ∈ Rplus × Rplus ∣  zero ) // max of second dev of Ton (zero, in this case) on range [t1, t2]&#10;  @instance_erroff err_off =  (λ (t1 ↦ t2) · t1 ↦ t2 ∈ Rplus × Rplus ∣  zero ) // max of second dev of Toff (zero, in this case) on range [t1, t2],&#10;  @prop_dis_Tdon_Ton ∀  t0, v0, t · t0∈Rplus ∧ v0∈R ∧ t∈Rplus ⇒&#10;                     (leq(Ton(t0↦v0)((t plus deltaT) plus tact),&#10;                     Tdon(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) plus err_on(t↦t plus (deltaT plus tact))) ∧&#10;                     leq(Tdon(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) sub err_on(t↦t plus (deltaT plus tact)),&#10;                     Ton(t0↦v0)((t plus deltaT) plus tact))) // tylor remainder theorem&#10;  @prop_dis_Tdoff_Toff ∀  t0, v0, t · t0∈Rplus ∧ v0∈R ∧ t∈Rplus ⇒&#10;                       (leq(Toff(t0↦v0)((t plus deltaT) plus tact),&#10;                       Tdoff(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) plus err_off(t↦t plus (deltaT plus tact))) ∧&#10;                       leq(Tdoff(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) sub err_off(t↦t plus (deltaT plus tact)),&#10;                       Toff(t0↦v0)((t plus deltaT) plus tact))) // tylor remainder theorem&#10;end&#10;" version="3">
<org.eventb.core.extendsContext name="_1n_GYB6kEeuwqMZIAEfsLQ" org.eventb.core.target="C4_control_logic"/>
<org.eventb.core.constant name="_zEyw4B6kEeuwqMZIAEfsLQ" org.eventb.core.comment="difference equation when heating is on, using forward euler" org.eventb.core.generated="false" org.eventb.core.identifier="Teon"/>
<org.eventb.core.constant name="_zEyw4R6kEeuwqMZIAEfsLQ" org.eventb.core.comment="difference equation when heating is off, using forward euler" org.eventb.core.generated="false" org.eventb.core.identifier="Teoff"/>
<org.eventb.core.constant name="_zEzX8B6kEeuwqMZIAEfsLQ" org.eventb.core.comment="error function compute bounded error between Teon and Ton" org.eventb.core.generated="false" org.eventb.core.identifier="err_on"/>
<org.eventb.core.constant name="_zEzX8R6kEeuwqMZIAEfsLQ" org.eventb.core.comment="error function compute bounded error between Teoff and Toff" org.eventb.core.generated="false" org.eventb.core.identifier="err_off"/>
<org.eventb.core.axiom name="_zEzX8h6kEeuwqMZIAEfsLQ" org.eventb.core.comment="Tn * now * deltaT -&gt; Tn+1" org.eventb.core.generated="false" org.eventb.core.label="type_Tdon" org.eventb.core.predicate="Teon ∈ (R × Rpos × Rpos) → R"/>
<org.eventb.core.axiom name="_zEz_AB6kEeuwqMZIAEfsLQ" org.eventb.core.comment="Tn * now * deltaT -&gt; Tn+1" org.eventb.core.generated="false" org.eventb.core.label="type_Tdoff" org.eventb.core.predicate="Teoff ∈ (R × Rpos × Rpos) → R"/>
<org.eventb.core.axiom name="_zEz_AR6kEeuwqMZIAEfsLQ" org.eventb.core.comment="now * now+deltaT -&gt; error" org.eventb.core.generated="false" org.eventb.core.label="type_err_on" org.eventb.core.predicate="err_on ∈ (Rpos × Rpos) → R"/>
<org.eventb.core.axiom name="_zE0mEB6kEeuwqMZIAEfsLQ" org.eventb.core.comment="now * now+deltaT -&gt; error" org.eventb.core.generated="false" org.eventb.core.label="type_err_off" org.eventb.core.predicate="err_off ∈ (Rpos × Rpos) → R"/>
<org.eventb.core.axiom name="_zE10MB6kEeuwqMZIAEfsLQ" org.eventb.core.comment="error is bounded when in on mode" org.eventb.core.generated="false" org.eventb.core.label="prop_dis_Teon_Ton" org.eventb.core.predicate="∀  t0, v0, t · t0∈Rpos ∧ v0∈R ∧ t∈Rpos ⇒&#10;                     (leq(Ton(t0↦v0)((t plus deltaT) plus tact),&#10;                     Teon(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) plus err_on(t↦t plus (deltaT plus tact))) ∧&#10;                     leq(Teon(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) sub err_on(t↦t plus (deltaT plus tact)),&#10;                     Ton(t0↦v0)((t plus deltaT) plus tact)))"/>
<org.eventb.core.axiom name="_zE10MR6kEeuwqMZIAEfsLQ" org.eventb.core.comment="error is bounded when in off mode" org.eventb.core.generated="false" org.eventb.core.label="prop_dis_Teoff_Toff" org.eventb.core.predicate="∀  t0, v0, t · t0∈Rpos ∧ v0∈R ∧ t∈Rpos ⇒&#10;                       (leq(Toff(t0↦v0)((t plus deltaT) plus tact),&#10;                       Teoff(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) plus err_off(t↦t plus (deltaT plus tact))) ∧&#10;                       leq(Teoff(Ton(t0↦v0)(t)↦t↦(deltaT plus tact)) sub err_off(t↦t plus (deltaT plus tact)),&#10;                       Toff(t0↦v0)((t plus deltaT) plus tact)))"/>
</org.eventb.core.contextFile>
