<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.comment="Copyright (c) 2019 LORIA&#13;&#10;   This program and the accompanying materials are made available under the&#13;&#10;   terms of the Eclipse Public License 2.0 which is available at&#13;&#10;   https://www.eclipse.org/legal/epl-2.0/&#13;&#10;   This Source Code may also be made available under the following Secondary&#13;&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#13;&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#13;&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#13;&#10;   Contributers: Zheng CHENG, Dominique MERY&#13;&#10;   Notes: Generic abstract problem of hybrid systems" org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1597935896367" org.eventb.texttools.text_representation="machine M_specification // abstract problem&#10; sees C_specification&#10;&#10;variables d // abstract continuous var&#10;&#10;&#10;invariants&#10;  @type_d d∈Rpos→D // x_p : time_domain --&gt; abstract domain&#10;  @safety_d ∀ t·t∈Rpos⇒ Pa(d(t))=TRUE&#10;  /* Abstract Safety Property *P* holds&#10;     for system state *x_p* at anytime */&#10;&#10;events&#10;  event INITIALISATION&#10;  /* Big-step semantics of all controlled hybrid system:&#10;     They are initialized to hold safety property */&#10;    then&#10;      @act1 d :∣  d' ∈ Rpos→D ∧ (∀ t·t∈Rpos⇒ Pa(d'(t))=TRUE )&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.seesContext name="_Ws0vEOL2EeqkvOQFd0OwrA" org.eventb.core.target="C0_specification"/>
<org.eventb.core.event name="'" org.eventb.core.comment="Big-step semantics of all controlled hybrid system:&#10;     They are initialized to hold safety property " org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_Ws1WIOL2EeqkvOQFd0OwrA" org.eventb.core.assignment="d :∣  d' ∈ Rpos→D ∧ (∀ t·t∈Rpos⇒ Pa(d'(t))=TRUE )" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_Ws1WIeL2EeqkvOQFd0OwrA" org.eventb.core.comment="abstract continuous var" org.eventb.core.generated="false" org.eventb.core.identifier="d"/>
<org.eventb.core.invariant name="_aIZeEOL2EeqkvOQFd0OwrA" org.eventb.core.comment="x_p : time_domain --&gt; abstract domain" org.eventb.core.generated="false" org.eventb.core.label="type_d" org.eventb.core.predicate="d∈Rpos→D"/>
<org.eventb.core.invariant name="_aIaFIOL2EeqkvOQFd0OwrA" org.eventb.core.comment="Abstract Safety Property *P* holds&#10;     for system state *x_p* at anytime " org.eventb.core.generated="false" org.eventb.core.label="safety_d" org.eventb.core.predicate="∀ t·t∈Rpos⇒ Pa(d(t))=TRUE"/>
<org.eventb.core.event name="_aIaFIOL2EeqkvOQFd0OwrB" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="Update">
<org.eventb.core.parameter name="'" org.eventb.core.identifier="fa"/>
<org.eventb.core.guard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="fa∈Rpos→D∧(∀ t·t∈Rpos⇒ Pa(fa(t))=TRUE)"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="d≔fa" org.eventb.core.label="act1"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
