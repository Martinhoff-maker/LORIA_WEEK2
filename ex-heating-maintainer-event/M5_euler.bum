<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.comment="Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;&#10;   Notes: Detail control logic, expressed in forward-euler with coped error " org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1604498221391" org.eventb.texttools.text_representation="machine M5_euler&#10;/* Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;&#10;   Notes: Detail control logic, expressed in forward-euler with coped error */&#10; refines M4  sees C5_euler&#10;&#10;variables T // continuous var temperature&#10;          now // continuous var time&#10;          s // system state&#10;          fa // predicted safe time series by the controller&#10;          q // discrete state&#10;          t0 // initial condition: time&#10;          T0 // initial condition: temperature&#10;&#10;&#10;invariants&#10;  @type_T T∈Rpos→R&#10;  @type_now now∈Rpos&#10;  @type_s s∈sysSTATE&#10;  @type_fa fa ∈ Rpos → R&#10;  @type_q q∈ctrlSTATE&#10;  @type_t0 t0∈Rpos&#10;  @type_T0 T0∈R&#10;  @id_Ton_now s = DECISION ∧ (q=ON) ⇒ (T(now) = Ton(t0↦T0)(now))&#10;  @id_Ton_now2 s = DECISION ∧ (q=OFFON) ⇒ (T(now) = Ton(t0↦T0)(now))&#10;  @id_Toff_now s= DECISION ∧ (q=OFF) ⇒ (T(now) = Toff(t0↦T0)(now))&#10;  @id_Toff_now2 s= DECISION ∧ (q=ONOFF) ⇒ (T(now) = Toff(t0↦T0)(now))&#10;  @id_Ton_tact s = DECISION ∧ (q=ON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))&#10;  @id_Toff_tact s= DECISION ∧ (q=OFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))&#10;  @id_Ton_tact2 s = DECISION ∧ (q=OFFON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))&#10;  @id_Toff_tact2 s= DECISION ∧ (q=ONOFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))&#10;  @id_fa_on s = RUN ∧ q=ON ⇒ (fa = Ton(t0↦T0))&#10;  @id_fa_off s= RUN ∧ q=OFF ⇒ (fa = Toff(t0↦T0))&#10;  @id_fa_onoff s = RUN ∧ q=ONOFF ⇒ (fa = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)))&#10;  @id_fa_offon s= RUN ∧ q=OFFON ⇒  (fa = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)))&#10;  @safe_fa s = RUN ⇒   (∀t·t∈Rpos∧t∈closed(now, (now plus deltaT) plus tact)⇒fa(t)∈closed(Tmin,Tmax)) // ensure fa is safe on a longer time frame, to cope with inertia&#10;  @predict_inv01 ∀t·t∈Rpos∧t∈closed(zero, now plus tact)⇒ T(t)∈closed(Tmin,Tmax) // stronger safety invariant&#10;  theorem @safety01 ∀t·t∈Rpos∧t∈closed(zero, now)⇒ T(t)∈closed(Tmin,Tmax)&#10;&#10;events&#10;  event INITIALISATION&#10;    then&#10;      @act1 T ≔  (λ t · t ∈ Rpos ∣ Tmin)   { zero plus tact ↦   Ton(zero↦Tmin)(zero plus tact)}&#10;      @act2 now ≔ zero&#10;      @act3 s ≔ DECISION&#10;      @act5 fa :∈ Rpos → R&#10;      @act6 q ≔ ON&#10;      @act7 t0≔zero&#10;      @act8 T0≔Tmin&#10;  end&#10;&#10;  event Plant_ON extends Plant_ON&#10;  end&#10;&#10;  event Plant_OFF extends Plant_OFF&#10;  end&#10;&#10;  event Plant_ONOFF extends Plant_ONOFF&#10;  end&#10;&#10;  event Plant_OFFON extends Plant_OFFON&#10;  end&#10;&#10;  event Ctrl_ON_safe refines Ctrl_ON_safe&#10;    any reading // sensor reading, see grd3&#10;&#10;    where&#10;      @grd1 s = DECISION&#10;      @grd2 q = ON ∨ q = OFFON&#10;      @grd3 reading = T(now)&#10;      @grd4 leq((reading plus (deltaT plus tact)) plus err_on(now↦now plus (deltaT plus tact)), Tmax)&#10;      /* implementable control logic in terms of&#10;         only sensor reading and constants */&#10;      theorem @thm01 T(now) = Ton(t0↦T0)(now) // prove by invariant id_Ton_now&#10;      theorem @thm02 (reading plus (deltaT plus tact)) = Tdon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) // prove by thm01 and expand instance_Tdon in context C4.&#10;      theorem @thm03 leq(Tdon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) plus err_on(now↦now plus (deltaT plus tact)), Tmax) // prove by rewriting grd4 and thm02&#10;      theorem @thm04 leq(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax) // prove by thm03 and tylor reminder theorem in C4&#10;    then&#10;      @act1 s ≔ RUN&#10;      @act3 fa ≔ Ton(t0↦T0)&#10;      @act4 q ≔ ON&#10;  end&#10;&#10;  event Ctrl_ON_unsafe refines Ctrl_ON_unsafe&#10;    any reading&#10;    where&#10;      @grd1 s = DECISION&#10;      @grd2 q = ON ∨ q = OFFON&#10;      @grd3 reading = T(now)&#10;      @grd4 gt((reading plus (deltaT plus tact)) sub err_on(now↦now plus (deltaT plus tact)), Tmax)&#10;      theorem @thm01 T(now) = Ton(t0↦T0)(now)&#10;      theorem @thm02 (reading plus (deltaT plus tact)) = Tdon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))&#10;      theorem @thm03 gt(Tdon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) sub err_on(now↦now plus (deltaT plus tact)), Tmax)&#10;      theorem @thm04 gt(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax)&#10;    then&#10;      @act1 s ≔ RUN&#10;      @act3 fa ≔ Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0))&#10;      @act4 q ≔ ONOFF&#10;  end&#10;&#10;  event Ctrl_OFF_safe refines Ctrl_OFF_safe&#10;    any reading&#10;    where&#10;      @grd1 s = DECISION&#10;      @grd2 q = OFF ∨ q = ONOFF&#10;      @grd3 reading = T(now)&#10;      @grd4 leq(Tmin, (reading plus neg(deltaT plus tact)) sub err_off(now↦now plus (deltaT plus tact)))&#10;      theorem @thm01 T(now) = Toff(t0↦T0)(now)&#10;      theorem @thm02 (reading plus neg(deltaT plus tact)) = Tdoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))&#10;      theorem @thm03 leq(Tmin, Tdoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) sub err_off(now↦now plus (deltaT plus tact)))&#10;      theorem @thm04 leq(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact))&#10;    then&#10;      @act1 s ≔ RUN&#10;      @act3 fa ≔ Toff(t0↦T0)&#10;      @act4 q ≔ OFF&#10;  end&#10;&#10;  event Ctrl_OFF_unsafe refines Ctrl_OFF_unsafe&#10;    any reading&#10;    where&#10;      @grd1 s = DECISION&#10;      @grd2 q = OFF ∨ q = ONOFF&#10;      @grd3 reading = T(now)&#10;      @grd4 gt(Tmin, (reading plus neg(deltaT plus tact)) plus err_off(now↦now plus (deltaT plus tact)))&#10;      theorem @thm01 T(now) = Toff(t0↦T0)(now)&#10;      theorem @thm02 (reading plus neg(deltaT plus tact)) = Tdoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))&#10;      theorem @thm03 gt(Tmin, Tdoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) plus err_off(now↦now plus (deltaT plus tact)))&#10;      theorem @thm04 gt(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact))&#10;    then&#10;      @act1 s ≔ RUN&#10;      @act3 fa ≔ Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0))&#10;      @act4 q ≔ OFFON&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_nObxcB6lEeuwqMZIAEfsLQ" org.eventb.core.target="M4_2_control_logic_time_trigger"/>
<org.eventb.core.seesContext name="_W-VnER6lEeuwqMZIAEfsLQ" org.eventb.core.target="C5_euler"/>
<org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_W-WOIB6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="T ≔  (λ t · t ∈ Rpos ∣ Tmin)   { zero plus tact ↦   Ton(zero↦Tmin)(zero plus tact)}" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_W-WOIR6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="now ≔ zero" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_W-WOIh6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_W-WOIx6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="fa :∈ Rpos → R" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
<org.eventb.core.action name="_W-W1MB6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="q ≔ ON" org.eventb.core.generated="false" org.eventb.core.label="act6"/>
<org.eventb.core.action name="_W-W1MR6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="t0≔zero" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
<org.eventb.core.action name="_W-W1Mh6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="T0≔Tmin" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_W-W1Mx6lEeuwqMZIAEfsLQ" org.eventb.core.comment="continuous var temperature" org.eventb.core.generated="false" org.eventb.core.identifier="T"/>
<org.eventb.core.variable name="_W-W1NB6lEeuwqMZIAEfsLQ" org.eventb.core.comment="continuous var time" org.eventb.core.generated="false" org.eventb.core.identifier="now"/>
<org.eventb.core.variable name="_W-W1NR6lEeuwqMZIAEfsLQ" org.eventb.core.comment="system state" org.eventb.core.generated="false" org.eventb.core.identifier="s"/>
<org.eventb.core.variable name="_W-XcQB6lEeuwqMZIAEfsLQ" org.eventb.core.comment="predicted safe time series by the controller" org.eventb.core.generated="false" org.eventb.core.identifier="fa"/>
<org.eventb.core.variable name="_W-XcQR6lEeuwqMZIAEfsLQ" org.eventb.core.comment="discrete state" org.eventb.core.generated="false" org.eventb.core.identifier="q"/>
<org.eventb.core.variable name="_W-XcQh6lEeuwqMZIAEfsLQ" org.eventb.core.comment="initial condition: time" org.eventb.core.generated="false" org.eventb.core.identifier="t0"/>
<org.eventb.core.variable name="_W-XcQx6lEeuwqMZIAEfsLQ" org.eventb.core.comment="initial condition: temperature" org.eventb.core.generated="false" org.eventb.core.identifier="T0"/>
<org.eventb.core.invariant name="_W-XcRB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_T" org.eventb.core.predicate="T∈Rpos→R"/>
<org.eventb.core.invariant name="_W-YDUB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_now" org.eventb.core.predicate="now∈Rpos"/>
<org.eventb.core.invariant name="_W-YDUR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_s" org.eventb.core.predicate="s∈sysSTATE"/>
<org.eventb.core.invariant name="_W-YDUh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_fa" org.eventb.core.predicate="fa ∈ Rpos → R"/>
<org.eventb.core.invariant name="_W-YDUx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_q" org.eventb.core.predicate="q∈ctrlSTATE"/>
<org.eventb.core.invariant name="_W-YqYB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_t0" org.eventb.core.predicate="t0∈Rpos"/>
<org.eventb.core.invariant name="_W-YqYR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="type_T0" org.eventb.core.predicate="T0∈R"/>
<org.eventb.core.invariant name="_W-YqYh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_now" org.eventb.core.predicate="s = DECISION ∧ (q=ON) ⇒ (T(now) = Ton(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_W-YqYx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_now2" org.eventb.core.predicate="s = DECISION ∧ (q=OFFON) ⇒ (T(now) = Ton(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_W-YqZB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_now" org.eventb.core.predicate="s= DECISION ∧ (q=OFF) ⇒ (T(now) = Toff(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_W-ZRcB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_now2" org.eventb.core.predicate="s= DECISION ∧ (q=ONOFF) ⇒ (T(now) = Toff(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_W-ZRcR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_tact" org.eventb.core.predicate="s = DECISION ∧ (q=ON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_W-ZRch6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_tact" org.eventb.core.predicate="s= DECISION ∧ (q=OFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_W-ZRcx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_tact2" org.eventb.core.predicate="s = DECISION ∧ (q=OFFON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_W-Z4gB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_tact2" org.eventb.core.predicate="s= DECISION ∧ (q=ONOFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_W-Z4gR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_fa_on" org.eventb.core.predicate="s = RUN ∧ q=ON ⇒ (fa = Ton(t0↦T0))"/>
<org.eventb.core.invariant name="_W-Z4gh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_fa_off" org.eventb.core.predicate="s= RUN ∧ q=OFF ⇒ (fa = Toff(t0↦T0))"/>
<org.eventb.core.invariant name="_W-Z4gx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_fa_onoff" org.eventb.core.predicate="s = RUN ∧ q=ONOFF ⇒ (fa = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)))"/>
<org.eventb.core.invariant name="_W-Z4hB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="id_fa_offon" org.eventb.core.predicate="s= RUN ∧ q=OFFON ⇒  (fa = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)))"/>
<org.eventb.core.invariant name="_W-afkB6lEeuwqMZIAEfsLQ" org.eventb.core.comment="ensure fa is safe on a longer time frame, to cope with inertia" org.eventb.core.generated="false" org.eventb.core.label="safe_fa" org.eventb.core.predicate="s = RUN ⇒   (∀t·t∈Rpos∧t∈closed(now, (now plus deltaT) plus tact)⇒fa(t)∈closed(Tmin,Tmax))"/>
<org.eventb.core.invariant name="_W-afkR6lEeuwqMZIAEfsLQ" org.eventb.core.comment="stronger safety invariant" org.eventb.core.generated="false" org.eventb.core.label="predict_inv01" org.eventb.core.predicate="∀t·t∈Rpos∧t∈closed(zero, now plus tact)⇒ T(t)∈closed(Tmin,Tmax)"/>
<org.eventb.core.invariant name="_W-afkh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="safety01" org.eventb.core.predicate="∀t·t∈Rpos∧t∈closed(zero, now)⇒ T(t)∈closed(Tmin,Tmax)" org.eventb.core.theorem="true"/>
<org.eventb.core.event name="_W-afkx6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="Plant_ON">
<org.eventb.core.refinesEvent name="_W-bGoB6lEeuwqMZIAEfsLQ" org.eventb.core.target="Plant_ON"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-bGoR6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="Plant_OFF">
<org.eventb.core.refinesEvent name="_W-bGoh6lEeuwqMZIAEfsLQ" org.eventb.core.target="Plant_OFF"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-bGox6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="Plant_ONOFF">
<org.eventb.core.refinesEvent name="_W-bGpB6lEeuwqMZIAEfsLQ" org.eventb.core.target="Plant_ONOFF"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-btsB6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="Plant_OFFON">
<org.eventb.core.refinesEvent name="_W-btsR6lEeuwqMZIAEfsLQ" org.eventb.core.target="Plant_OFFON"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-btsh6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Ctrl_ON_safe">
<org.eventb.core.refinesEvent name="_W-btsx6lEeuwqMZIAEfsLQ" org.eventb.core.target="Ctrl_ON_safe"/>
<org.eventb.core.guard name="_W-cUwB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = DECISION"/>
<org.eventb.core.guard name="_W-cUwR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = ON ∨ q = OFFON"/>
<org.eventb.core.guard name="_W-cUwh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="reading = T(now)"/>
<org.eventb.core.guard name="_W-cUwx6lEeuwqMZIAEfsLQ" org.eventb.core.comment="please fill in implementable control logic in terms of&#10;         only sensor reading and constants " org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="⊤"/>
<org.eventb.core.guard name="_W-cUxB6lEeuwqMZIAEfsLQ" org.eventb.core.comment="prove by invariant id_Ton_now" org.eventb.core.generated="false" org.eventb.core.label="thm01" org.eventb.core.predicate="T(now) = Ton(t0↦T0)(now)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-c70B6lEeuwqMZIAEfsLQ" org.eventb.core.comment="prove by thm01 and expand instance_Tdon in context C4." org.eventb.core.generated="false" org.eventb.core.label="thm02" org.eventb.core.predicate="(reading plus (deltaT plus tact)) = Teon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-c70R6lEeuwqMZIAEfsLQ" org.eventb.core.comment="prove by rewriting grd4 and thm02" org.eventb.core.generated="false" org.eventb.core.label="thm03" org.eventb.core.predicate="leq(Teon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) plus err_on(now↦now plus (deltaT plus tact)), Tmax)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-c70h6lEeuwqMZIAEfsLQ" org.eventb.core.comment="prove by thm03 and tylor reminder theorem in C4" org.eventb.core.generated="false" org.eventb.core.label="thm04" org.eventb.core.predicate="leq(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax)" org.eventb.core.theorem="true"/>
<org.eventb.core.action name="_W-di4B6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="s ≔ RUN" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_W-di4R6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="fa ≔ Ton(t0↦T0)" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_W-di4h6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="q ≔ ON" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="_kf5uoB6lEeuwqMZIAEfsLQ" org.eventb.core.comment="sensor reading, see grd3" org.eventb.core.generated="false" org.eventb.core.identifier="reading"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-di4x6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Ctrl_ON_unsafe">
<org.eventb.core.refinesEvent name="_W-eJ8B6lEeuwqMZIAEfsLQ" org.eventb.core.target="Ctrl_ON_unsafe"/>
<org.eventb.core.guard name="_W-eJ8h6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = DECISION"/>
<org.eventb.core.guard name="_W-eJ8x6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = ON ∨ q = OFFON"/>
<org.eventb.core.guard name="_W-eJ9B6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="reading = T(now)"/>
<org.eventb.core.guard name="_W-eJ9R6lEeuwqMZIAEfsLQ" org.eventb.core.comment="please fill in implementable control logic in terms of&#13;&#10;         only sensor reading and constants " org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="⊤"/>
<org.eventb.core.guard name="_W-exAB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm01" org.eventb.core.predicate="T(now) = Ton(t0↦T0)(now)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-exAR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm02" org.eventb.core.predicate="(reading plus (deltaT plus tact)) = Teon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-exAh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm03" org.eventb.core.predicate="gt(Teon(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) sub err_on(now↦now plus (deltaT plus tact)), Tmax)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-exAx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm04" org.eventb.core.predicate="gt(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax)" org.eventb.core.theorem="true"/>
<org.eventb.core.action name="_W-fYEB6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="s ≔ RUN" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_W-fYER6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="fa ≔ Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0))" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_W-fYEh6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="q ≔ ONOFF" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="_kf68wB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.identifier="reading"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-fYEx6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Ctrl_OFF_safe">
<org.eventb.core.refinesEvent name="_W-fYFB6lEeuwqMZIAEfsLQ" org.eventb.core.target="Ctrl_OFF_safe"/>
<org.eventb.core.guard name="_W-f_IR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = DECISION"/>
<org.eventb.core.guard name="_W-f_Ih6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = OFF ∨ q = ONOFF"/>
<org.eventb.core.guard name="_W-f_Ix6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="reading = T(now)"/>
<org.eventb.core.guard name="_W-f_JB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="⊤"/>
<org.eventb.core.guard name="_W-gmMB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm01" org.eventb.core.predicate="T(now) = Toff(t0↦T0)(now)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-gmMR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm02" org.eventb.core.predicate="(reading plus neg(deltaT plus tact)) = Teoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-gmMh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm03" org.eventb.core.predicate="leq(Tmin, Teoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) sub err_off(now↦now plus (deltaT plus tact)))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-gmMx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm04" org.eventb.core.predicate="leq(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.action name="_W-hNQB6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="s ≔ RUN" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_W-hNQR6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="fa ≔ Toff(t0↦T0)" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_W-hNQh6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="q ≔ OFF" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="_kf8K4B6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.identifier="reading"/>
</org.eventb.core.event>
<org.eventb.core.event name="_W-hNQx6lEeuwqMZIAEfsLQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Ctrl_OFF_unsafe">
<org.eventb.core.refinesEvent name="_W-hNRB6lEeuwqMZIAEfsLQ" org.eventb.core.target="Ctrl_OFF_unsafe"/>
<org.eventb.core.guard name="_W-h0UR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = DECISION"/>
<org.eventb.core.guard name="_W-h0Uh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = OFF ∨ q = ONOFF"/>
<org.eventb.core.guard name="_W-h0Ux6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="reading = T(now)"/>
<org.eventb.core.guard name="_W-h0VB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="⊤"/>
<org.eventb.core.guard name="_W-ibYB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm01" org.eventb.core.predicate="T(now) = Toff(t0↦T0)(now)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-ibYR6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm02" org.eventb.core.predicate="(reading plus neg(deltaT plus tact)) = Teoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-ibYh6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm03" org.eventb.core.predicate="gt(Tmin, Teoff(Ton(t0↦T0)(now)↦now↦(deltaT plus tact)) plus err_off(now↦now plus (deltaT plus tact)))" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="_W-ibYx6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.label="thm04" org.eventb.core.predicate="gt(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact))" org.eventb.core.theorem="true"/>
<org.eventb.core.action name="_W-jCcB6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="s ≔ RUN" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_W-jCcR6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="fa ≔ Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0))" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_W-jCch6lEeuwqMZIAEfsLQ" org.eventb.core.assignment="q ≔ OFFON" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="_kf9ZAB6lEeuwqMZIAEfsLQ" org.eventb.core.generated="false" org.eventb.core.identifier="reading"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
