<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.comment="Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;   Notes: Implementation " org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1601834704057" org.eventb.texttools.text_representation="machine M5_implementation&#10;/* Copyright (c) 2019 LORIA&#10;   This program and the accompanying materials are made available under the&#10;   terms of the Eclipse Public License 2.0 which is available at&#10;   https://www.eclipse.org/legal/epl-2.0/&#10;   This Source Code may also be made available under the following Secondary&#10;   Licenses when the conditions for such availability set forth in the Eclipse&#10;   Public License, v. 2.0 are satisfied: GNU General Public License, version 3&#10;   which is available at https://www.gnu.org/licenses/gpl-3.0.txt&#10;   Contributers: Zheng CHENG, Dominique MERY&#10;   Notes: Implementation */&#10; refines M5_0_prepare  sees C4_control_logic&#10;&#10;variables T // continuous var temperature&#10;          now // continuous var time&#10;          s // system state&#10;          fa // predicted safe time series by the controller&#10;          q // discrete state&#10;          t0 // initial condition: time&#10;          T0 // initial condition: temperature&#10;          ta&#10;&#10;invariants&#10;  @type_T T∈Rpos→R&#10;  @type_now now∈Rpos&#10;  @type_s s∈sysSTATE&#10;  @type_fa fa ∈ Rpos → R&#10;  @type_q q∈ctrlSTATE&#10;  @type_t0 t0∈Rpos&#10;  @type_T0 T0∈R&#10;  @id_fa_on s = RUN ∧ q=ON ⇒ (fa = Ton(t0↦T0))&#10;  @id_fa_off s= RUN ∧ q=OFF ⇒ (fa = Toff(t0↦T0))&#10;  @id_fa_onoff s = RUN ∧ q=ONOFF ⇒ (fa = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)))&#10;  @id_fa_offon s= RUN ∧ q=OFFON ⇒  (fa = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)))&#10;  @id_Ton_now s = DECISION ∧ (q=ON) ⇒ (T(now) = Ton(t0↦T0)(now))&#10;  @id_Ton_now2 s = DECISION ∧ (q=OFFON) ⇒ (T(now) = Ton(t0↦T0)(now))&#10;  @id_Toff_now s= DECISION ∧ (q=OFF) ⇒ (T(now) = Toff(t0↦T0)(now))&#10;  @id_Toff_now2 s= DECISION ∧ (q=ONOFF) ⇒ (T(now) = Toff(t0↦T0)(now))&#10;  @id_Ton_tact s = DECISION ∧ (q=ON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))&#10;  @id_Toff_tact s= DECISION ∧ (q=OFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))&#10;  @id_Ton_tact2 s = DECISION ∧ (q=OFFON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))&#10;  @id_Toff_tact2 s= DECISION ∧ (q=ONOFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))&#10;  @safe_fa s = RUN ⇒   (∀t·t∈Rpos∧t∈openclosed(now, (now plus deltaT) plus tact)⇒fa(t)∈closed(Tmin,Tmax))&#10;  @safety00 (∀t·t∈Rpos∧t∈closed(zero, now plus tact)⇒T(t)∈closed(Tmin,Tmax))&#10;  theorem @safe_fa_deduced s = RUN ⇒ (∀t·t∈Rpos∧t∈openclosed(now, now plus ta)⇒fa(t)∈closed(Tmin,Tmax))&#10;  @safety01 ∀t·t∈Rpos∧t∈closed(zero, now)⇒ T(t)∈closed(Tmin,Tmax)&#10;  @glue_ta ta = deltaT&#10;  theorem @thm_now_plus_type now plus tact∈Rpos&#10;  theorem @thm_now_plus_type2 now plus deltaT∈Rpos&#10;  theorem @thm_now_lt lt(now, now plus deltaT)&#10;  theorem @thm_now_lt01 lt(now,(now plus deltaT) plus tact)&#10;  theorem @thm_now_tact leq(zero,now plus tact)&#10;  theorem @thm_now_delta_tact leq(now plus deltaT,(now plus deltaT) plus tact)&#10;  theorem @thm_now leq(zero,now)&#10;  theorem @thm_now_nowtact leq(now,now plus tact)&#10;  theorem @thm_set_Rpos openclosed(now,now plus tact)⊆Rpos&#10;&#10;events&#10;  event INITIALISATION&#10;    then&#10;      @act1 T ≔  (λ t · t ∈ Rpos ∣ Tmin)   { zero plus tact ↦ Ton(zero↦Tmin)(zero plus tact)}&#10;      @act2 now ≔ zero&#10;      @act3 s ≔ DECISION&#10;      @act5 fa :∈ Rpos → R&#10;      @act6 q ≔ ON&#10;      @act7 t0≔zero&#10;      @act8 T0≔Tmin&#10;      @act9 ta≔deltaT&#10;  end&#10;&#10;  event Plant_ON refines Plant_ON&#10;    where&#10;      @grd1 s = RUN&#10;      @grd2 q = ON&#10;    then&#10;      @act1 now ≔ now plus deltaT&#10;      @act2 T ≔ (T   (lopen(now)◁ fa))&#10;      @act3 s ≔ DECISION&#10;  end&#10;&#10;  event Plant_OFF refines Plant_OFF&#10;    where&#10;      @grd1 s = RUN&#10;      @grd2 q = OFF&#10;    then&#10;      @act1 now ≔ now plus deltaT&#10;      @act2 T ≔ (T   (lopen(now)◁ fa))&#10;      @act3 s ≔ DECISION&#10;  end&#10;&#10;  event Plant_ONOFF refines Plant_ONOFF&#10;    where&#10;      @grd1 s = RUN&#10;      @grd2 q = ONOFF&#10;    then&#10;      @act1 now ≔ now plus deltaT&#10;      @act2 T ≔ (T   (lopen(now)◁ fa))&#10;      @act3 s ≔ DECISION&#10;      @act4 t0 ≔ now plus tact // shifting initial condition&#10;      @act5 T0 ≔ Ton(t0↦T0)(now plus tact) // shifting initial condition&#10;  end&#10;&#10;  event Plant_OFFON refines Plant_OFFON&#10;    where&#10;      @grd1 s = RUN&#10;      @grd2 q = OFFON&#10;    then&#10;      @act1 now ≔ now plus deltaT&#10;      @act2 T ≔ (T   (lopen(now)◁ fa))&#10;      @act3 s ≔ DECISION&#10;      @act4 t0 ≔ now plus tact // shifting initial condition&#10;      @act5 T0 ≔ Toff(t0↦T0)(now plus tact) // shifting initial condition&#10;  end&#10;&#10;  event Ctrl refines Ctrl_ON_safe Ctrl_ON_unsafe Ctrl_OFF_safe Ctrl_OFF_unsafe&#10;    any fx qx&#10;    where&#10;      @grd1 s = DECISION&#10;      @grd2 ((q = ON ∨ q = OFFON) ∧ leq(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax) ∧ fx=Ton(t0↦T0) ∧ qx=ON)&#10;            ∨&#10;            ((q = ON ∨ q = OFFON) ∧ gt(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax) ∧ fx = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)) ∧ qx=ONOFF)&#10;            ∨&#10;            ((q = OFF ∨ q =ONOFF) ∧ leq(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact)) ∧ fx=Toff(t0↦T0) ∧ qx=OFF)&#10;            ∨&#10;            ((q = OFF ∨ q = ONOFF) ∧ gt(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact)) ∧ fx = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)) ∧ qx=OFFON)&#10;      theorem @grd4 (∀t·t∈Rpos∧t∈openclosed(now, (now plus deltaT) plus tact)⇒fx(t)∈closed(Tmin,Tmax))&#10;    then&#10;      @act1 s ≔ RUN&#10;      @act2 fa ≔ fx&#10;      @act3 q ≔ qx&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_NZ58UAMuEeu8u6cRqHVE-w" org.eventb.core.target="M5_0_prepare"/>
<org.eventb.core.seesContext name="_NZ58UQMuEeu8u6cRqHVE-w" org.eventb.core.target="C4_control_logic"/>
<org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_NZ6jYAMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T ≔  (λ t · t ∈ Rpos ∣ Tmin)   { zero plus tact ↦ Ton(zero↦Tmin)(zero plus tact)}" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NZ6jYQMuEeu8u6cRqHVE-w" org.eventb.core.assignment="now ≔ zero" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NZ6jYgMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_NZ6jYwMuEeu8u6cRqHVE-w" org.eventb.core.assignment="fa :∈ Rpos → R" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
<org.eventb.core.action name="_NZ6jZAMuEeu8u6cRqHVE-w" org.eventb.core.assignment="q ≔ ON" org.eventb.core.generated="false" org.eventb.core.label="act6"/>
<org.eventb.core.action name="_NZ6jZQMuEeu8u6cRqHVE-w" org.eventb.core.assignment="t0≔zero" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
<org.eventb.core.action name="_NZ6jZgMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T0≔Tmin" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
<org.eventb.core.action name="_NZ6jZwMuEeu8u6cRqHVE-w" org.eventb.core.assignment="ta≔deltaT" org.eventb.core.generated="false" org.eventb.core.label="act9"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_NZ7KcAMuEeu8u6cRqHVE-w" org.eventb.core.comment="continuous var temperature" org.eventb.core.generated="false" org.eventb.core.identifier="T"/>
<org.eventb.core.variable name="_NZ7KcQMuEeu8u6cRqHVE-w" org.eventb.core.comment="continuous var time" org.eventb.core.generated="false" org.eventb.core.identifier="now"/>
<org.eventb.core.variable name="_NZ7KcgMuEeu8u6cRqHVE-w" org.eventb.core.comment="system state" org.eventb.core.generated="false" org.eventb.core.identifier="s"/>
<org.eventb.core.variable name="_NZ7KcwMuEeu8u6cRqHVE-w" org.eventb.core.comment="predicted safe time series by the controller" org.eventb.core.generated="false" org.eventb.core.identifier="fa"/>
<org.eventb.core.variable name="_NZ7KdAMuEeu8u6cRqHVE-w" org.eventb.core.comment="discrete state" org.eventb.core.generated="false" org.eventb.core.identifier="q"/>
<org.eventb.core.variable name="_NZ7KdQMuEeu8u6cRqHVE-w" org.eventb.core.comment="initial condition: time" org.eventb.core.generated="false" org.eventb.core.identifier="t0"/>
<org.eventb.core.variable name="_NZ7KdgMuEeu8u6cRqHVE-w" org.eventb.core.comment="initial condition: temperature" org.eventb.core.generated="false" org.eventb.core.identifier="T0"/>
<org.eventb.core.variable name="_NZ7KdwMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.identifier="ta"/>
<org.eventb.core.invariant name="_NZ7KeAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_T" org.eventb.core.predicate="T∈Rpos→R"/>
<org.eventb.core.invariant name="_NZ7xgAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_now" org.eventb.core.predicate="now∈Rpos"/>
<org.eventb.core.invariant name="_NZ7xgQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_s" org.eventb.core.predicate="s∈sysSTATE"/>
<org.eventb.core.invariant name="_NZ7xggMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_fa" org.eventb.core.predicate="fa ∈ Rpos → R"/>
<org.eventb.core.invariant name="_NZ7xgwMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_q" org.eventb.core.predicate="q∈ctrlSTATE"/>
<org.eventb.core.invariant name="_NZ7xhAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_t0" org.eventb.core.predicate="t0∈Rpos"/>
<org.eventb.core.invariant name="_NZ7xhQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="type_T0" org.eventb.core.predicate="T0∈R"/>
<org.eventb.core.invariant name="_NZ8YkAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_fa_on" org.eventb.core.predicate="s = RUN ∧ q=ON ⇒ (fa = Ton(t0↦T0))"/>
<org.eventb.core.invariant name="_NZ8YkQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_fa_off" org.eventb.core.predicate="s= RUN ∧ q=OFF ⇒ (fa = Toff(t0↦T0))"/>
<org.eventb.core.invariant name="_NZ8YkgMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_fa_onoff" org.eventb.core.predicate="s = RUN ∧ q=ONOFF ⇒ (fa = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)))"/>
<org.eventb.core.invariant name="_NZ8YkwMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_fa_offon" org.eventb.core.predicate="s= RUN ∧ q=OFFON ⇒  (fa = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)))"/>
<org.eventb.core.invariant name="_NZ8YlAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_now" org.eventb.core.predicate="s = DECISION ∧ (q=ON) ⇒ (T(now) = Ton(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_NZ8YlQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_now2" org.eventb.core.predicate="s = DECISION ∧ (q=OFFON) ⇒ (T(now) = Ton(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_NZ8YlgMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_now" org.eventb.core.predicate="s= DECISION ∧ (q=OFF) ⇒ (T(now) = Toff(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_NZ8_oAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_now2" org.eventb.core.predicate="s= DECISION ∧ (q=ONOFF) ⇒ (T(now) = Toff(t0↦T0)(now))"/>
<org.eventb.core.invariant name="_NZ8_oQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_tact" org.eventb.core.predicate="s = DECISION ∧ (q=ON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_NZ8_ogMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_tact" org.eventb.core.predicate="s= DECISION ∧ (q=OFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_NZ8_owMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Ton_tact2" org.eventb.core.predicate="s = DECISION ∧ (q=OFFON) ⇒ (T(now plus tact) = Ton(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_NZ8_pAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="id_Toff_tact2" org.eventb.core.predicate="s= DECISION ∧ (q=ONOFF) ⇒ (T(now plus tact) = Toff(t0↦T0)(now plus tact))"/>
<org.eventb.core.invariant name="_NZ8_pQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="safe_fa" org.eventb.core.predicate="s = RUN ⇒   (∀t·t∈Rpos∧t∈openclosed(now, (now plus deltaT) plus tact)⇒fa(t)∈closed(Tmin,Tmax))"/>
<org.eventb.core.invariant name="_ha7_sAW1EeupSo2yOlEiFg" org.eventb.core.generated="false" org.eventb.core.label="safety00" org.eventb.core.predicate="(∀t·t∈Rpos∧t∈closed(zero, now plus tact)⇒T(t)∈closed(Tmin,Tmax))"/>
<org.eventb.core.invariant name="_NZ9msAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="safe_fa_deduced" org.eventb.core.predicate="s = RUN ⇒ (∀t·t∈Rpos∧t∈openclosed(now, now plus ta)⇒fa(t)∈closed(Tmin,Tmax))" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_NZ9msQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="safety01" org.eventb.core.predicate="∀t·t∈Rpos∧t∈closed(zero, now)⇒ T(t)∈closed(Tmin,Tmax)"/>
<org.eventb.core.invariant name="_NZ9msgMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="glue_ta" org.eventb.core.predicate="ta = deltaT"/>
<org.eventb.core.invariant name="_NZ9mswMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="thm_now_plus_type" org.eventb.core.predicate="now plus tact∈Rpos" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_NZ9mtAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="thm_now_plus_type2" org.eventb.core.predicate="now plus deltaT∈Rpos" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_NZ9mtQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="thm_now_lt" org.eventb.core.predicate="lt(now, now plus deltaT)" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_NZ-NwAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="thm_now_lt01" org.eventb.core.predicate="lt(now,(now plus deltaT) plus tact)" org.eventb.core.theorem="true"/>
<org.eventb.core.event name="_NZ-NwQMuEeu8u6cRqHVE-w" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Plant_ON">
<org.eventb.core.refinesEvent name="_NZ-NwgMuEeu8u6cRqHVE-w" org.eventb.core.target="Plant_ON"/>
<org.eventb.core.guard name="_NZ-NwwMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = RUN"/>
<org.eventb.core.guard name="_NZ-NxAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = ON"/>
<org.eventb.core.action name="_NZ-NxQMuEeu8u6cRqHVE-w" org.eventb.core.assignment="now ≔ now plus deltaT" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NZ-NxgMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T ≔ (T   (lopen(now)◁ fa))" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NZ-00AMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NZ-00QMuEeu8u6cRqHVE-w" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Plant_OFF">
<org.eventb.core.refinesEvent name="_NZ-00gMuEeu8u6cRqHVE-w" org.eventb.core.target="Plant_OFF"/>
<org.eventb.core.guard name="_NZ-00wMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = RUN"/>
<org.eventb.core.guard name="_NZ-01AMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = OFF"/>
<org.eventb.core.action name="_NZ-01QMuEeu8u6cRqHVE-w" org.eventb.core.assignment="now ≔ now plus deltaT" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NZ-01gMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T ≔ (T   (lopen(now)◁ fa))" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NZ-01wMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NZ_b4AMuEeu8u6cRqHVE-w" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Plant_ONOFF">
<org.eventb.core.refinesEvent name="_NZ_b4QMuEeu8u6cRqHVE-w" org.eventb.core.target="Plant_ONOFF"/>
<org.eventb.core.guard name="_NZ_b4gMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = RUN"/>
<org.eventb.core.guard name="_NZ_b4wMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = ONOFF"/>
<org.eventb.core.action name="_NZ_b5AMuEeu8u6cRqHVE-w" org.eventb.core.assignment="now ≔ now plus deltaT" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NZ_b5QMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T ≔ (T   (lopen(now)◁ fa))" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NZ_b5gMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_NZ_b5wMuEeu8u6cRqHVE-w" org.eventb.core.assignment="t0 ≔ now plus tact" org.eventb.core.comment="shifting initial condition" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.action name="_NaAC8AMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T0 ≔ Ton(t0↦T0)(now plus tact)" org.eventb.core.comment="shifting initial condition" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NaAC8QMuEeu8u6cRqHVE-w" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Plant_OFFON">
<org.eventb.core.refinesEvent name="_NaAC8gMuEeu8u6cRqHVE-w" org.eventb.core.target="Plant_OFFON"/>
<org.eventb.core.guard name="_NaAC8wMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = RUN"/>
<org.eventb.core.guard name="_NaAC9AMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="q = OFFON"/>
<org.eventb.core.action name="_NaAC9QMuEeu8u6cRqHVE-w" org.eventb.core.assignment="now ≔ now plus deltaT" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NaAC9gMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T ≔ (T   (lopen(now)◁ fa))" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NaAqAAMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ DECISION" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_NaAqAQMuEeu8u6cRqHVE-w" org.eventb.core.assignment="t0 ≔ now plus tact" org.eventb.core.comment="shifting initial condition" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
<org.eventb.core.action name="_NaAqAgMuEeu8u6cRqHVE-w" org.eventb.core.assignment="T0 ≔ Toff(t0↦T0)(now plus tact)" org.eventb.core.comment="shifting initial condition" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NaAqAwMuEeu8u6cRqHVE-w" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Ctrl">
<org.eventb.core.refinesEvent name="_NaAqBAMuEeu8u6cRqHVE-w" org.eventb.core.target="Ctrl_ON_safe"/>
<org.eventb.core.refinesEvent name="_NaAqBQMuEeu8u6cRqHVE-w" org.eventb.core.target="Ctrl_ON_unsafe"/>
<org.eventb.core.refinesEvent name="_NaAqBgMuEeu8u6cRqHVE-w" org.eventb.core.target="Ctrl_OFF_safe"/>
<org.eventb.core.refinesEvent name="_NaAqBwMuEeu8u6cRqHVE-w" org.eventb.core.target="Ctrl_OFF_unsafe"/>
<org.eventb.core.parameter name="_NaAqCAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.identifier="fx"/>
<org.eventb.core.parameter name="_NaBREAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.identifier="qx"/>
<org.eventb.core.guard name="_NaBREQMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="s = DECISION"/>
<org.eventb.core.guard name="_NaBREgMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="((q = ON ∨ q = OFFON) ∧ leq(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax) ∧ fx=Ton(t0↦T0) ∧ qx=ON)&#10;            ∨&#10;            ((q = ON ∨ q = OFFON) ∧ gt(Ton(t0↦T0)((now plus deltaT) plus tact), Tmax) ∧ fx = Toff(now plus tact↦Ton(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Ton(t0↦T0)) ∧ qx=ONOFF)&#10;            ∨&#10;            ((q = OFF ∨ q =ONOFF) ∧ leq(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact)) ∧ fx=Toff(t0↦T0) ∧ qx=OFF)&#10;            ∨&#10;            ((q = OFF ∨ q = ONOFF) ∧ gt(Tmin, Toff(t0↦T0)((now plus deltaT) plus tact)) ∧ fx = Ton(now plus tact↦Toff(t0↦T0)(now plus tact))  (openclosed(now, now plus tact)◁ Toff(t0↦T0)) ∧ qx=OFFON)"/>
<org.eventb.core.guard name="_NaBRFAMuEeu8u6cRqHVE-w" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="(∀t·t∈Rpos∧t∈openclosed(now, (now plus deltaT) plus tact)⇒fx(t)∈closed(Tmin,Tmax))" org.eventb.core.theorem="true"/>
<org.eventb.core.action name="_NaBRFQMuEeu8u6cRqHVE-w" org.eventb.core.assignment="s ≔ RUN" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_NaBRFgMuEeu8u6cRqHVE-w" org.eventb.core.assignment="fa ≔ fx" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_NaBRFwMuEeu8u6cRqHVE-w" org.eventb.core.assignment="q ≔ qx" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
</org.eventb.core.event>
<org.eventb.core.invariant name="_IMg7QAZsEeu268sQHhZS0g" org.eventb.core.generated="false" org.eventb.core.label="thm_now_tact" org.eventb.core.predicate="leq(zero,now plus tact)" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_IMg7QQZsEeu268sQHhZS0g" org.eventb.core.generated="false" org.eventb.core.label="thm_now_delta_tact" org.eventb.core.predicate="leq(now plus deltaT,(now plus deltaT) plus tact)" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_5F1WIAShEeu4TNKd317lfA" org.eventb.core.generated="false" org.eventb.core.label="thm_now" org.eventb.core.predicate="leq(zero,now)" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_IMg7QgZsEeu268sQHhZS0g" org.eventb.core.generated="false" org.eventb.core.label="thm_now_nowtact" org.eventb.core.predicate="leq(now,now plus tact)" org.eventb.core.theorem="true"/>
<org.eventb.core.invariant name="_IMg7QwZsEeu268sQHhZS0g" org.eventb.core.generated="false" org.eventb.core.label="thm_set_Rpos" org.eventb.core.predicate="openclosed(now,now plus tact)⊆Rpos" org.eventb.core.theorem="true"/>
</org.eventb.core.machineFile>
