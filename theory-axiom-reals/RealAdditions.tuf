<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.importTheoryProject name="'" org.eventb.theory.core.importTheoryProject="/theory-axiom-reals">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/theory-axiom-reals/Real.dtf|org.eventb.theory.core.deployedTheoryRoot#Real"/>
</org.eventb.theory.core.importTheoryProject>
<org.eventb.theory.core.axiomaticDefinitionsBlock name="(" org.eventb.core.label="real_add_ref">
<org.eventb.theory.core.axiomaticOperatorDefinition name="," org.eventb.core.comment="base^exp" org.eventb.core.label="Rpower" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="R">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="R" org.eventb.core.identifier="base"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="R" org.eventb.core.identifier="exp"/>
</org.eventb.theory.core.axiomaticOperatorDefinition>
<org.eventb.theory.core.axiomaticOperatorDefinition name="-" org.eventb.core.label="Rsum" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="R">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.comment="lower bound" org.eventb.core.expression="R" org.eventb.core.identifier="lo"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.comment="higher bound" org.eventb.core.expression="R" org.eventb.core.identifier="hi"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.comment="sequnece to be summed" org.eventb.core.expression="R ⇸ R" org.eventb.core.identifier="s"/>
</org.eventb.theory.core.axiomaticOperatorDefinition>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="." org.eventb.core.label="Rsum_empty_range" org.eventb.core.predicate="∀ l, h, s · l∈R ∧ h∈R ∧ s∈R⇸R⇒&#10;  (leq(h,l) ⇒&#10;    Rsum(l,h,s) = zero)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="Q" org.eventb.core.label="Rplus_def" org.eventb.core.predicate="Rplus = { r ∣ r ∈ R ∧ leq(zero, r)}"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="/" org.eventb.core.label="Rmult_0_r" org.eventb.core.predicate="∀ r · r∈R ⇒&#10;  r mult zero = zero"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="0" org.eventb.core.label="Rmult_0_l" org.eventb.core.predicate="∀ r · r∈R ⇒&#10;  zero mult r = zero"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="1" org.eventb.core.label="Rmult_eq_compat_l " org.eventb.core.predicate="∀ r,r1,r2 · r∈R ∧ r1∈R∧ r2∈R ⇒&#10;  (r1 = r2 ⇒&#10;    r mult r1 = r mult r2)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="2" org.eventb.core.label="Rsum_ind_below" org.eventb.core.predicate="∀ l, h, s · l∈R ∧ h∈R ∧ s∈R⇸R⇒&#10;  (lt(l,h) ⇒&#10;    Rsum(l,h,s) = Rsum(l plus one, h, s) plus s(l))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="3" org.eventb.core.label="Rsum_ind_above" org.eventb.core.predicate="∀ l, h, s · l∈R ∧ h∈R ∧ s∈R⇸R⇒&#10;  (lt(l,h) ⇒&#10;    Rsum(l,h,s) = Rsum(l, h sub one, s) plus s(h sub one))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="4" org.eventb.core.label="Rle_lt_0_plus_1" org.eventb.core.predicate="∀ r · r∈R ⇒&#10;  (leq(zero, r) ⇒ &#10;    lt(zero, r plus one))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="5" org.eventb.core.label="Rlt_plus_1" org.eventb.core.predicate="∀ r· r∈R ⇒&#10;  lt(r, r plus one)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="6" org.eventb.core.label="Rlt_le" org.eventb.core.predicate="∀ r1,r2· r1∈R ∧r2∈R ⇒&#10;  (lt(r1,r2) ⇒ &#10;    leq(r1,r2))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="7" org.eventb.core.comment="remark, Coq put this as an axiom." org.eventb.core.label="Rlt_trans" org.eventb.core.predicate="∀ r1,r2,r3· r1∈R ∧r2∈R ∧ r3∈R ⇒&#13;&#10;  (lt(r1,r2) ∧ lt(r2,r3) ⇒ &#13;&#10;    lt(r1,r3))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="8" org.eventb.core.label="Rplus_le_le_0_compat" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ (leq(zero, r1) ⇒ (leq(zero, r2) ⇒ &#10;  leq(zero, r1 plus r2)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="9" org.eventb.core.label="Rle_lt_or_eq_dec" org.eventb.core.predicate="∀ r1, r2· r1∈R ∧ r2∈R ⇒&#10; (leq(r1,r2) ⇒ (lt(r1,r2) ∨ r1 = r2))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name=":" org.eventb.core.label="inser_trans_R2" org.eventb.core.predicate="∀ r1,r2,r3,r4 · r1∈R ∧ r2∈R ∧ r3∈R ∧ r4∈R ⇒ &#10;  (leq(r1,r2) ∧ lt(r2,r3) ⇒&#10;   (leq(r1,r2) ∧ leq(r2,r4)) ∨&#10;   (lt(r4, r2) ∧ lt(r2,r3)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name=";" org.eventb.core.label="inser_trans_R" org.eventb.core.predicate="∀ r1,r2,r3,r4 · r1∈R ∧ r2∈R ∧ r3∈R ∧ r4∈R ⇒ &#10;  (leq(r1,r2) ∧ lt(r2,r3) ⇒&#10;   (leq(r1,r2) ∧ lt(r2,r4)) ∨&#10;   (leq(r4, r2) ∧ lt(r2,r3)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="=" org.eventb.core.label="inser_trans_R3" org.eventb.core.predicate="∀ r1,r2,r3,r4 · r1∈R ∧ r2∈R ∧ r3∈R ∧ r4∈R ⇒ &#10;  (leq(r1,r2) ∧ leq(r2,r3) ⇒&#10;   (leq(r1,r2) ∧ leq(r2,r4)) ∨&#10;   (lt(r4, r2) ∧ leq(r2,r3)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="&gt;" org.eventb.core.label="Rminus_diag_eq" org.eventb.core.predicate="∀ r1,r2 · r1∈R ∧ r2∈R ⇒&#10; (r1 = r2 ⇒ (r1 sub r2 = zero))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="?" org.eventb.core.label="Rplus_minus" org.eventb.core.predicate="∀ r1,r2 · r1∈R ∧r2∈R ⇒&#10;r1 plus (r2 sub r1) = r2"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="@" org.eventb.core.label="Rplus_le_lt_0_compat" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ (leq(zero, r1) ⇒ (lt(zero, r2) ⇒ &#10;  lt(zero, r1 plus r2)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="A" org.eventb.core.label="Rplus_lt_compat_r" org.eventb.core.predicate="∀ r1, r2, r · r∈R ∧ r1∈R ∧ r2∈R ⇒ (lt(r1, r2) ⇒ &#10;  lt(r1 plus r, r2 plus r))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="B" org.eventb.core.label="Ropp_0" org.eventb.core.predicate="neg(zero) = zero"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="C" org.eventb.core.label="Ropp_minus_distr" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ neg (r1 sub r2) = r2 sub r1"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="D" org.eventb.core.label="Ropp_le_contravar" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ∧ leq(r2, r1) ⇒ leq(neg(r1), neg(r2))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="E" org.eventb.core.label="R_lt_trans" org.eventb.core.predicate="∀x,y,z· lt(x,y) ∧ lt(y,z) ⇒ lt(x,z)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="F" org.eventb.core.label="Ropp_involutive" org.eventb.core.predicate="∀ r · r∈R ⇒ neg(neg(r)) = r"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="G" org.eventb.core.label="Ropp_plus_distr" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ neg (r1 plus r2) = neg(r1) plus neg(r2)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="H" org.eventb.core.label="Rlt_not_le" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ (lt(r2,r1) ⇒ ¬ (leq(r1, r2)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="I" org.eventb.core.label="Rplus_le_compat_r" org.eventb.core.predicate="∀ r1, r2, r · r∈R ∧ r1∈R ∧ r2∈R ⇒ (leq(r1, r2) ⇒ &#13;&#10;  leq(r1 plus r, r2 plus r))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="J" org.eventb.core.label="Rge_gt_trans" org.eventb.core.predicate="∀ r1,r2,r3· r1∈R ∧r2∈R ∧ r3∈R ⇒&#13;&#10;  (leq(r2,r1) ∧ lt(r3,r2) ⇒ &#13;&#10;    lt(r3,r1))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="K" org.eventb.core.label="Rle_lt_trans" org.eventb.core.predicate="∀ r1,r2,r3· r1∈R ∧r2∈R ∧ r3∈R ⇒&#13;&#10;  (leq(r1,r2) ∧ lt(r2,r3) ⇒ &#13;&#10;    lt(r1,r3))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="O" org.eventb.core.label="Rle_le_eq" org.eventb.core.predicate="∀ r1,r2· r1∈R ∧r2∈R ⇒&#10;  (leq(r1,r2) ∧ leq(r2,r1) ⇒ &#10;    r1 = r2)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="N" org.eventb.core.label="Rlt_le_trans" org.eventb.core.predicate="∀ r1,r2,r3· r1∈R ∧r2∈R ∧ r3∈R ⇒&#10;  (lt(r1,r2) ∧ leq(r2,r3) ⇒ &#10;    lt(r1,r3))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="L" org.eventb.core.label="inser_trans_R4" org.eventb.core.predicate="∀ r1,r2,r3,r4 · r1∈R ∧ r2∈R ∧ r3∈R ∧ r4∈R ⇒ &#10;  (lt(r1,r2) ∧ leq(r2,r3) ⇒&#10;   (lt(r1,r2) ∧ leq(r2,r4)) ∨&#10;   (lt(r4, r2) ∧ leq(r2,r3)))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="M" org.eventb.core.label="Rle_not_lt" org.eventb.core.predicate="∀ r1, r2 · r1∈R ∧ r2∈R ⇒ (leq(r2,r1) ⇒ ¬ (lt(r1, r2)))"/>
<org.eventb.theory.core.axiomaticOperatorDefinition name="P" org.eventb.core.label="Rplus" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(R)"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="R" org.eventb.core.label="Rmult_le_compat_r" org.eventb.core.predicate="∀ r,r1,r2· leq(zero,r) ⇒ (leq(r1,r2) ⇒ leq(r1 mult r, r2 mult r))"/>
</org.eventb.theory.core.axiomaticDefinitionsBlock>
<org.eventb.theory.core.proofRulesBlock name=")" org.eventb.core.label="real_additions">
<org.eventb.theory.core.metaVariable name="'" org.eventb.core.identifier="a" org.eventb.theory.core.type="R"/>
<org.eventb.theory.core.rewriteRule name="(" org.eventb.core.label="rew1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="leq_refl" org.eventb.theory.core.formula="leq(a,a)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="⊤"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.metaVariable name=")" org.eventb.core.identifier="b" org.eventb.theory.core.type="R"/>
<org.eventb.theory.core.rewriteRule name="*" org.eventb.core.label="rew2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="lt_def_left" org.eventb.theory.core.formula="lt(a, b)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="leq(a, b) ∧ a≠b"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="," org.eventb.core.label="rew4" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Ropp_0" org.eventb.theory.core.formula="neg(zero)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="zero"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.rewriteRule name="-" org.eventb.core.label="rew5" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="false" org.eventb.theory.core.desc="Rplus_le_compat_r" org.eventb.theory.core.formula="leq(a plus c, b plus c)">
<org.eventb.theory.core.rewriteRuleRHS name="'" org.eventb.core.label="rhs1" org.eventb.core.predicate="⊤" org.eventb.theory.core.formula="leq(a,b)"/>
</org.eventb.theory.core.rewriteRule>
<org.eventb.theory.core.metaVariable name="." org.eventb.core.identifier="c" org.eventb.theory.core.type="R"/>
</org.eventb.theory.core.proofRulesBlock>
<org.eventb.theory.core.theorem name="*" org.eventb.core.label="Rplus_zero" org.eventb.core.predicate="zero ∈ Rplus"/>
<org.eventb.theory.core.theorem name="+" org.eventb.core.label="Rplus_plus_compat" org.eventb.core.predicate="∀ r1,r2 · r1∈Rplus ∧ r2∈Rplus ⇒ r1 plus r2 ∈ Rplus"/>
<org.eventb.theory.core.theorem name="," org.eventb.core.label="prop_fun_override_agree_right" org.eventb.core.predicate="∀ f,g,v · f∈Rplus→R ∧ g∈Rplus⇸R∧v∈dom(g)⇒ (fg)(v)=g(v)"/>
<org.eventb.theory.core.theorem name="-" org.eventb.core.label="prop_fun_override_agree_left" org.eventb.core.predicate="∀ f,g,v · f∈Rplus→R ∧ g∈Rplus⇸R∧v∉dom(g)∧v∈dom(f)⇒ (fg)(v)=f(v)"/>
<org.eventb.theory.core.theorem name="." org.eventb.core.label="prop_domain_restric_agree" org.eventb.core.predicate="∀ f,s,v · f∈Rplus→R ∧ s⊆Rplus∧v∈s⇒ (s◁f)(v)=f(v)"/>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="prop_domain_restric_type" org.eventb.core.predicate="∀ s, f · f∈Rplus→R ∧ s⊆Rplus ⇒ s◁f ∈ Rplus⇸R"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="prop_domain_restric_dom" org.eventb.core.predicate="∀ s, f · f∈Rplus→R ∧ s⊆Rplus ⇒ dom(s◁f) = s"/>
<org.eventb.theory.core.theorem name="1" org.eventb.core.label="prop_fun_override_dom" org.eventb.core.predicate="∀ g, f · f∈Rplus→R ∧  g∈Rplus⇸R ⇒ dom(fg) = dom(f)"/>
<org.eventb.theory.core.theorem name="2" org.eventb.core.label="prop_fun_override_type" org.eventb.core.predicate="∀ g, f · f∈Rplus→R ∧ g∈Rplus⇸R ⇒ f  g ∈ Rplus→R"/>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="prop_fun_override_type2" org.eventb.core.predicate="∀ g, f · f∈Rplus→R ∧ g∈Rplus⇸R ⇒ g  f ∈ Rplus→R"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="prop_fun_override_type3" org.eventb.core.predicate="∀ g, f · f∈Rplus→R ∧ g∈Rplus⇸R ⇒ f  g ∈ R⇸R"/>
<org.eventb.theory.core.axiomaticDefinitionsBlock name="5" org.eventb.core.label="Cancellation">
<org.eventb.theory.core.axiomaticDefinitionAxiom name="'" org.eventb.core.label="Rplus_le_reg_r " org.eventb.core.predicate="∀ r,r1,r2 · r∈R∧r1∈R∧r2∈R ⇒&#13;&#10;  (leq(r1 plus r, r2 plus r) ⇒ leq(r1, r2))"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="(" org.eventb.core.label="Rmult_le_reg_r" org.eventb.core.predicate="∀ r,r1,r2 · r∈R∧r1∈R∧r2∈R ⇒&#13;&#10;  (lt(zero,r) ∧ leq(r1 mult r, r2 mult r) ⇒ leq(r1, r2))"/>
</org.eventb.theory.core.axiomaticDefinitionsBlock>
<org.eventb.theory.core.axiomaticDefinitionsBlock name="6" org.eventb.core.label="real_square_function">
<org.eventb.theory.core.axiomaticOperatorDefinition name="'" org.eventb.core.label="Rsqr" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="R">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="R" org.eventb.core.identifier="r"/>
</org.eventb.theory.core.axiomaticOperatorDefinition>
<org.eventb.theory.core.axiomaticDefinitionAxiom name="(" org.eventb.core.label="Rsqr_def" org.eventb.core.predicate="∀r·Rsqr(r) = r mult r"/>
<org.eventb.theory.core.axiomaticDefinitionAxiom name=")" org.eventb.core.label="Rsqr_0" org.eventb.core.predicate="Rsqr(zero) = zero"/>
</org.eventb.theory.core.axiomaticDefinitionsBlock>
</org.eventb.theory.core.theoryRoot>
